services:
  sge:
    image: sge-app:0.0.1
    container_name: sge-app
    ports:
      - "8000:8000"
    networks:
      - sge-network
    env_file:
      - .env
    depends_on:
      - db
    command: >
      sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"

  celery-worker:
    image: sge-app:0.0.1
    container_name: sge-celery-worker
    networks:
      - sge-network
    env_file:
      - .env
    depends_on:
      - db
      - broker
    command: >
      sh -c "celery -A app worker -l INFO"
    healthcheck:
      test: ["CMD", "sh", "-c", "celery -A app status || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s

  celery-beat:
    image: sge-app:0.0.1
    container_name: sge-celery-beat
    networks:
      - sge-network
    env_file:
      - .env
    depends_on:
      - db
      - broker
    command: >
      sh -c "celery -A app beat -l INFO"
    healthcheck:
      test: ["CMD", "sh", "-c", "celery -A app status || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
  
  db:
    container_name: db-sge
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sge-network

  broker:
    image: rabbitmq:3.12-management-alpine
    container_name: broker-sge
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - sge-network

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  sge-network:
    driver: bridge
